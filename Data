print("Welcome to ZodiacX!!!Due to ZodiacX you will find out your zodiac sign and some characteristic information coressponding to it")
print("-------------------------------------------------")


class zodiac:
    def __init__(self,day, month, zodiac_sign, explaination) :
        self.day = day
        self.month = month
        self.zodiac_sign = zodiac_sign
        self.explaination = explaination
    
    
    def get_day(self):
        return self.day

    def get_month(self):
        return self.month
    
    def check_zodiac_sign(self):
        return self.zodiac_sign
        
    def provide_explaination(self):
        return self.explaination
    
class Capricorn:
    def __init__(self,sign, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    
    def check_sign(zodiac):
         if (month == "january")
            if (day < 20) 
            astro_sign = "Capricorn"; 
            else
            astro_sign = "aquarius";
           
class Pisces:
    def __init__(self,day, month, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
 
    def check_sign(zodiac):
        if(month == "march") 
            if (day < 21)  
            astro_sign = "Pisces"; 
            else
            astro_sign = "aries"; 

class Aquarius:
    def __init__(self,sign, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
        if (month == "february") 
            if (day < 19) 
            astro_sign = "Aquarius"; 
            else
            astro_sign = "pisces"; 
class Sagittarius:
    def __init__(self,sign, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
        if (month == "december")
              
            if (day < 22) 
            astro_sign = "Sagittarius"; 
            else
            astro_sign ="capricorn";  
class Scorpio:
    def __init__(self, sign,day, month, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
class Libra:
    def __init__(self, sign, day, month, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
        if (month == "october") 
            if (day < 23) 
            astro_sign = "Libra"; 
            else
            astro_sign = "scorpio"; 
class Virgo:
    def __init__(self,sign, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
        if (month == "september") 
            if (day < 23) 
            astro_sign = "Virgo"; 
            else
            astro_sign = "libra"; 
class Leo:
   def __init__(self,sign,  zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
   def check_sign(zodiac):
      if( month == "august")
            if (day < 23)  
            astro_sign = "Leo"; 
            else
            astro_sign = "virgo";
class Canser:
    def __init__(self, sign, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
        if (month == "november"){ 
            if (day < 22) 
            astro_sign = "canser"; 
            else
            astro_sign = "sagittarius";
class Gemini:
    def __init__(self,sign, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
        if( month == "june")
            if (day < 21) 
            astro_sign = "Gemini"; 
            else
            astro_sign = "scorpio";
class Taurus:
   def __init__(self, sign,  zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
   def check_sign(zodiac):
      if (month == "may") 
            if (day < 21) 
            astro_sign = "Taurus"; 
            else
            astro_sign = "gemini"; 
class Aries:
  def __init__(self, sign, zodiac_explaination):
        self.sign = sign
        self.zodiac_explaination = zodiac_explaination
    def check_sign(zodiac):
         if (month == "april")
            if (day < 20) 
            astro_sign = "Aries"; 
            else
            astro_sign = "taurus";  

def main():
 z1 = astro_sign("Capricorn", "The measured master planner of the horoscope family, Capricon energy teaches us the power of structure and long-term goals.")
 z2 = astro_sign("Pisces", "The dreamer and healer of the horoscope family, Pisces energy awakens compassion, imagination and artistry, uniting us as one.")
z3 = astro_sign("Aquarius", "The mad scientist and humanitarian of the horoscope wheel, futuristic Aquarius helps us innovate and unite for social justice.")
 z4 = astro_sign("Sagittarius", "The wordly adventurer of the horoscope wheel, Sagittarius energy inspires us to dream big, chase the impossible and take fearless risks.")
 z5 =  astro_sign("Scorpio", "The most intense and focused of the horoscope signs, Scorpio energy helps us dive deep, merge our superpowers and form bonds that are built to last.")
 z6 = astro_sign("Libra", "The balance of the horoscope family, Libra energy inspires us to seek peace, harmony and cooperation and to do it with style and grace.")
 z7 = astro_sign("Virgo", "The masterful helper of the horoscope wheel, Virgo energy teaches us to serve, do impeccable work and prioritize wellbeing of ourselves, our loved ones and the planet.")
 z8 = astro_sign("Leo", "The drama and regal ruler of the horoscope clan, Leo energy helps us shine, express ourselves boldly and wear our hearts on our sleeves.")
 z9 = astro_sign("Canser", "The natural nurturer of the horoscope wheel, Cancer energy helps us connect with our feelings, plant deep roots and feather our family nests.")
 z10 = astro_sign("Gemini", "The most versatile and vibrant horoscope sign, Gemini energy helps us communicate, collaborate and fly our freak flags at full mast.")
 z11 = astro_sign("Taurus", "The persistent provider of the horoscope family, Taurus energy helps us seek security, enjoy earthly pleasures and get the job done.")
 z12 = astro_sign("Aries", "The pioneer and trailblazer of the horoscope wheel, Aries energy helps us initiate, fight for our beliefs and fearlessly put ourselves out there.")

 main()  
